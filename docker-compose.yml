version: "3.3"

services:
    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
        image: ft_transcendence_frontend:v1.0.0
        restart: on-failure
        depends_on:
            - backend
        networks:
            - project_network
        environment:
            - NODE_ENV=production
        ports:
            - 8080:80
            - 4443:443
        extra_hosts:
            - ${DOMAIN_NAME}:${DOMAIN_TARGET}
            - www.${DOMAIN_NAME}:${DOMAIN_TARGET}

    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile
        image: ft_transcendence_backend:v1.0.0
        restart: on-failure
        depends_on:
            - postgres
        networks:
            - project_network
        environment:
            - NODE_ENV=production
            - POSTGRES_DB
            - POSTGRES_USER
            - POSTGRES_PASSWORD
        ports:
            - 3000:3000
        volumes:
            - backend-uploads-data:/home/node/app/uploads

    postgres:
        container_name: postgres
        build:
            context: ./postgres
            dockerfile: Dockerfile
            args:
                - POSTGRES_DB
                - POSTGRES_USER
                - POSTGRES_PASSWORD
        image: ft_transcendence_postgres:v1.0.0
        restart: on-failure
        environment:
            - POSTGRES_DB
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - PGDATA=/var/lib/postgresql/data
        networks:
            - project_network
        ports:
            - 5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data

networks:
    project_network:
        driver: bridge

volumes:
    backend-uploads-data:
    postgres-data:

