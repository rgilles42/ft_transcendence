version: "3.7"

services:
    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        image: ft_transcendence_frontend:v1.0.0-dev
        restart: on-failure
        depends_on:
            - backend
        networks:
            - project_network-dev
        environment:
            - NODE_ENV=development
        ports:
            - "8080:8080"
        volumes:
            - ./frontend/app:/home/node/app
        extra_hosts:
            - "${DOMAIN_NAME}:${DOMAIN_TARGET}"
            - "www.${DOMAIN_NAME}:${DOMAIN_TARGET}"

    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: Dockerfile.dev
        image: ft_transcendence_backend:v1.0.0-dev
        restart: on-failure
        depends_on:
            - postgres
        networks:
            - project_network-dev
        environment:
            - NODE_ENV=development
            - POSTGRES_USER
            - POSTGRES_PASSWORD
        ports:
            - "3000:3000"
        volumes:
            - ./backend/app:/home/node/app

    postgres:
        container_name: postgres
        build:
            context: ./postgres
            dockerfile: Dockerfile
            args:
                - POSTGRES_USER
                - POSTGRES_PASSWORD
        image: ft_transcendence_postgres:v1.0.0-dev
        restart: on-failure
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
        networks:
            - project_network-dev
        ports:
            - "5432:5432"
        volumes:
            - "postgres-dev-data:/var/lib/postgresql/data"

networks:
    project_network-dev:
        driver: bridge

volumes:
    postgres-dev-data:

