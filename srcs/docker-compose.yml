version: "3.3"

services:
    # frontend:
    #     container_name: frontend
    #     build:
    #         context: ./requirements/frontend
    #         dockerfile: Dockerfile
    #     image: ft_transcendence_frontend:v1.0.0
    #     restart: on-failure
    #     depends_on:
    #         - backend
    #     networks:
    #         - ft_transcendence_network
    #     ports:
    #         - "9000:9000"

    backend:
        container_name: backend
        build:
            context: ./requirements/backend
            dockerfile: Dockerfile
            args:
                - POSTGRES_USER
                - POSTGRES_PASSWORD
        image: ft_transcendence_backend:v1.0.0
        restart: on-failure
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
        networks:
            - ft_transcendence_network
        ports:
            - "3000:3000"
        extra_hosts:
            - "${DOMAIN_NAME}:${DOMAIN_TARGET}"
            - "www.${DOMAIN_NAME}:${DOMAIN_TARGET}"
        volumes:
            - "backend-data:/var/www/backend"

    # postgres:
    #     container_name: postgres
    #     image: postgres
    #     restart: on-failure
    #     environment:
    #         - POSTGRES_ROOT_PASSWORD
    #         - POSTGRES_USER
    #         - POSTGRES_PASSWORD
    #     networks:
    #         - ft_transcendence_network
    #     ports:
    #         - "5432:5432"
    #     volumes:
    #         - "postgres-data:/var/lib/postgresql"

networks:
    ft_transcendence_network:
        driver: bridge

volumes:
    backend-data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: "${VOLUMES_DIR}/backend-data"
    postgres-data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: "${VOLUMES_DIR}/postgres-data"

